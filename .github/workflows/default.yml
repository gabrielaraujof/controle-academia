name: Continuous Integration

on:
  pull_request:
    branches:
      - main
  workflow_call:

jobs:
  
  build:
    name: Build
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node: [ 16, 18 ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setting Node.js Environment
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'

      - name: Download Dependencies
        run: npm ci 

      - name: Build and Bundle Assets
        run: npm run build

  test:
    name: Test
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node: [ 16, 18 ]
    env:
      CI: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setting Node.js Environment
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'

      - name: Download Dependencies
        run: npm ci 

      - name: Run Tests
        run: npm run test -- --coverage

      - name: Run Codacy Coverage Reporter
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: coverage/lcov.info

  lint:
    name: Lint
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setting Node.js Environment
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'

      - name: Download dependencies
        run: npm ci

      - run: npm run lint -- -f json -o lint/eslint-analysis.json

  codacy:
    name: Static Code Analysis
    runs-on: ubuntu-20.04
    needs: [lint, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Run SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v1.6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: SonarQube Quality Gate check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
